plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'  // FlutterFire konfiguracija
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"  // Flutter Gradle Plugin mora biti posle Android i Kotlin plugina
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.fonis_openday24"  // Postavi svoj namespace
    compileSdkVersion flutter.compileSdkVersion  // Ispravno ime za compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.example.fonis_openday24"  // Specifična aplikacija ID
        minSdkVersion flutter.minSdkVersion  // Postavi minSdkVersion
        targetSdkVersion flutter.targetSdkVersion  // Postavi targetSdkVersion
        versionCode flutterVersionCode.toInteger()  // Konvertuj string u integer
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Dodaj svoj potpisni config za release build
            signingConfig signingConfigs.debug  // Debug config, možeš kasnije promeniti
        }
    }
    
    configurations.all {
        resolutionStrategy {
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.22'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
        }
    }
}

flutter {
    source = "../.."  // Izvor Flutter koda
}
